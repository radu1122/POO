Starting audit...
[ERROR] D:\Facultate\POO\teme\POO\tema2\.\src\dataSet\Consumer.java:1:9: Name 'dataSet' must match pattern '^[a-z]+(\.[a-zA-Z_][a-zA-Z0-9_]*)*$'. [PackageName]
[ERROR] D:\Facultate\POO\teme\POO\tema2\.\src\dataSet\Consumer.java:17:21: Parameter id should be final. [FinalParameters]
[ERROR] D:\Facultate\POO\teme\POO\tema2\.\src\dataSet\Consumer.java:17:29: Parameter budget should be final. [FinalParameters]
[ERROR] D:\Facultate\POO\teme\POO\tema2\.\src\dataSet\Consumer.java:17:41: Parameter monthlyIncome should be final. [FinalParameters]
[ERROR] D:\Facultate\POO\teme\POO\tema2\.\src\dataSet\Consumer.java:23:5: Class 'Consumer' looks like designed for extension (can be subclassed), but the method 'distributorBankrupt' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Consumer' final or making the method 'distributorBankrupt' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\Facultate\POO\teme\POO\tema2\.\src\dataSet\Consumer.java:23:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] D:\Facultate\POO\teme\POO\tema2\.\src\dataSet\Consumer.java:27:5: Class 'Consumer' looks like designed for extension (can be subclassed), but the method 'resetContract' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Consumer' final or making the method 'resetContract' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\Facultate\POO\teme\POO\tema2\.\src\dataSet\Consumer.java:27:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] D:\Facultate\POO\teme\POO\tema2\.\src\dataSet\Consumer.java:29: Line is longer than 100 characters (found 101). [LineLength]
[ERROR] D:\Facultate\POO\teme\POO\tema2\.\src\dataSet\Consumer.java:34:5: Class 'Consumer' looks like designed for extension (can be subclassed), but the method 'resetContractData' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Consumer' final or making the method 'resetContractData' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\Facultate\POO\teme\POO\tema2\.\src\dataSet\Consumer.java:34:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] D:\Facultate\POO\teme\POO\tema2\.\src\dataSet\Consumer.java:43:5: Class 'Consumer' looks like designed for extension (can be subclassed), but the method 'declareBankruptcy' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Consumer' final or making the method 'declareBankruptcy' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\Facultate\POO\teme\POO\tema2\.\src\dataSet\Consumer.java:43:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] D:\Facultate\POO\teme\POO\tema2\.\src\dataSet\Consumer.java:48:5: Class 'Consumer' looks like designed for extension (can be subclassed), but the method 'generateBill' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Consumer' final or making the method 'generateBill' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\Facultate\POO\teme\POO\tema2\.\src\dataSet\Consumer.java:48:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] D:\Facultate\POO\teme\POO\tema2\.\src\dataSet\Consumer.java:52: Line is longer than 100 characters (found 119). [LineLength]
[ERROR] D:\Facultate\POO\teme\POO\tema2\.\src\dataSet\Consumer.java:58:5: Class 'Consumer' looks like designed for extension (can be subclassed), but the method 'payBills' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Consumer' final or making the method 'payBills' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\Facultate\POO\teme\POO\tema2\.\src\dataSet\Consumer.java:58:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] D:\Facultate\POO\teme\POO\tema2\.\src\dataSet\Consumer.java:63:53: '1.2' is a magic number. [MagicNumber]
[ERROR] D:\Facultate\POO\teme\POO\tema2\.\src\dataSet\Consumer.java:69:69: '1.2' is a magic number. [MagicNumber]
[ERROR] D:\Facultate\POO\teme\POO\tema2\.\src\dataSet\Consumer.java:70: Line is longer than 100 characters (found 108). [LineLength]
[ERROR] D:\Facultate\POO\teme\POO\tema2\.\src\dataSet\Consumer.java:78: Line is longer than 100 characters (found 108). [LineLength]
[ERROR] D:\Facultate\POO\teme\POO\tema2\.\src\dataSet\Consumer.java:84:5: Class 'Consumer' looks like designed for extension (can be subclassed), but the method 'getDistributorProfit' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Consumer' final or making the method 'getDistributorProfit' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\Facultate\POO\teme\POO\tema2\.\src\dataSet\Consumer.java:88:5: Class 'Consumer' looks like designed for extension (can be subclassed), but the method 'setDistributorProfit' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Consumer' final or making the method 'setDistributorProfit' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\Facultate\POO\teme\POO\tema2\.\src\dataSet\Consumer.java:88:38: Parameter distributorProfit should be final. [FinalParameters]
[ERROR] D:\Facultate\POO\teme\POO\tema2\.\src\dataSet\Consumer.java:92:5: Class 'Consumer' looks like designed for extension (can be subclassed), but the method 'getRemainedContractMonths' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Consumer' final or making the method 'getRemainedContractMonths' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\Facultate\POO\teme\POO\tema2\.\src\dataSet\Consumer.java:96:5: Class 'Consumer' looks like designed for extension (can be subclassed), but the method 'setRemainedContractMonths' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Consumer' final or making the method 'setRemainedContractMonths' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\Facultate\POO\teme\POO\tema2\.\src\dataSet\Consumer.java:96:43: Parameter remainedContractMonths should be final. [FinalParameters]
[ERROR] D:\Facultate\POO\teme\POO\tema2\.\src\dataSet\Consumer.java:100:5: Class 'Consumer' looks like designed for extension (can be subclassed), but the method 'getContractPrice' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Consumer' final or making the method 'getContractPrice' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\Facultate\POO\teme\POO\tema2\.\src\dataSet\Consumer.java:104:5: Class 'Consumer' looks like designed for extension (can be subclassed), but the method 'setContractPrice' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Consumer' final or making the method 'setContractPrice' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\Facultate\POO\teme\POO\tema2\.\src\dataSet\Consumer.java:104:34: Parameter contractPrice should be final. [FinalParameters]
[ERROR] D:\Facultate\POO\teme\POO\tema2\.\src\dataSet\Consumer.java:108:5: Class 'Consumer' looks like designed for extension (can be subclassed), but the method 'getBudget' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Consumer' final or making the method 'getBudget' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\Facultate\POO\teme\POO\tema2\.\src\dataSet\Consumer.java:112:5: Class 'Consumer' looks like designed for extension (can be subclassed), but the method 'setBudget' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Consumer' final or making the method 'setBudget' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\Facultate\POO\teme\POO\tema2\.\src\dataSet\Consumer.java:112:27: Parameter budget should be final. [FinalParameters]
[ERROR] D:\Facultate\POO\teme\POO\tema2\.\src\dataSet\Consumer.java:116:5: Class 'Consumer' looks like designed for extension (can be subclassed), but the method 'getDistributorId' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Consumer' final or making the method 'getDistributorId' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\Facultate\POO\teme\POO\tema2\.\src\dataSet\Consumer.java:120:5: Class 'Consumer' looks like designed for extension (can be subclassed), but the method 'setDistributorId' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Consumer' final or making the method 'setDistributorId' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\Facultate\POO\teme\POO\tema2\.\src\dataSet\Consumer.java:120:34: Parameter distributorId should be final. [FinalParameters]
[ERROR] D:\Facultate\POO\teme\POO\tema2\.\src\dataSet\Consumer.java:124:5: Class 'Consumer' looks like designed for extension (can be subclassed), but the method 'getId' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Consumer' final or making the method 'getId' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\Facultate\POO\teme\POO\tema2\.\src\dataSet\Consumer.java:128:5: Class 'Consumer' looks like designed for extension (can be subclassed), but the method 'setId' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Consumer' final or making the method 'setId' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\Facultate\POO\teme\POO\tema2\.\src\dataSet\Consumer.java:128:23: Parameter id should be final. [FinalParameters]
[ERROR] D:\Facultate\POO\teme\POO\tema2\.\src\dataSet\Consumer.java:132:5: Class 'Consumer' looks like designed for extension (can be subclassed), but the method 'getInitialBudget' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Consumer' final or making the method 'getInitialBudget' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\Facultate\POO\teme\POO\tema2\.\src\dataSet\Consumer.java:136:5: Class 'Consumer' looks like designed for extension (can be subclassed), but the method 'setInitialBudget' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Consumer' final or making the method 'setInitialBudget' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\Facultate\POO\teme\POO\tema2\.\src\dataSet\Consumer.java:136:34: Parameter initialBudget should be final. [FinalParameters]
[ERROR] D:\Facultate\POO\teme\POO\tema2\.\src\dataSet\Consumer.java:140:5: Class 'Consumer' looks like designed for extension (can be subclassed), but the method 'getMonthlyIncome' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Consumer' final or making the method 'getMonthlyIncome' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\Facultate\POO\teme\POO\tema2\.\src\dataSet\Consumer.java:144:5: Class 'Consumer' looks like designed for extension (can be subclassed), but the method 'setMonthlyIncome' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Consumer' final or making the method 'setMonthlyIncome' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\Facultate\POO\teme\POO\tema2\.\src\dataSet\Consumer.java:144:34: Parameter monthlyIncome should be final. [FinalParameters]
[ERROR] D:\Facultate\POO\teme\POO\tema2\.\src\dataSet\Consumer.java:148:5: Class 'Consumer' looks like designed for extension (can be subclassed), but the method 'isBankrupt' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Consumer' final or making the method 'isBankrupt' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\Facultate\POO\teme\POO\tema2\.\src\dataSet\Consumer.java:152:5: Class 'Consumer' looks like designed for extension (can be subclassed), but the method 'setBankrupt' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Consumer' final or making the method 'setBankrupt' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\Facultate\POO\teme\POO\tema2\.\src\dataSet\Consumer.java:152:29: Parameter bankrupt should be final. [FinalParameters]
[ERROR] D:\Facultate\POO\teme\POO\tema2\.\src\dataSet\Consumer.java:156:5: Class 'Consumer' looks like designed for extension (can be subclassed), but the method 'getCurrInvoice' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Consumer' final or making the method 'getCurrInvoice' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\Facultate\POO\teme\POO\tema2\.\src\dataSet\Consumer.java:160:5: Class 'Consumer' looks like designed for extension (can be subclassed), but the method 'setCurrInvoice' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Consumer' final or making the method 'setCurrInvoice' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\Facultate\POO\teme\POO\tema2\.\src\dataSet\Consumer.java:160:32: Parameter currInvoice should be final. [FinalParameters]
[ERROR] D:\Facultate\POO\teme\POO\tema2\.\src\dataSet\Consumer.java:164:5: Class 'Consumer' looks like designed for extension (can be subclassed), but the method 'getLastInvoice' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Consumer' final or making the method 'getLastInvoice' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\Facultate\POO\teme\POO\tema2\.\src\dataSet\Consumer.java:168:5: Class 'Consumer' looks like designed for extension (can be subclassed), but the method 'setLastInvoice' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Consumer' final or making the method 'setLastInvoice' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\Facultate\POO\teme\POO\tema2\.\src\dataSet\Consumer.java:168:32: Parameter lastInvoice should be final. [FinalParameters]
[ERROR] D:\Facultate\POO\teme\POO\tema2\.\src\dataSet\Consumer.java:172:5: Class 'Consumer' looks like designed for extension (can be subclassed), but the method 'getHasContract' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Consumer' final or making the method 'getHasContract' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\Facultate\POO\teme\POO\tema2\.\src\dataSet\Consumer.java:176:5: Class 'Consumer' looks like designed for extension (can be subclassed), but the method 'setHasContract' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Consumer' final or making the method 'setHasContract' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\Facultate\POO\teme\POO\tema2\.\src\dataSet\Consumer.java:176:32: Parameter hasContract should be final. [FinalParameters]
[ERROR] D:\Facultate\POO\teme\POO\tema2\.\src\dataSet\Consumer.java:180:5: Class 'Consumer' looks like designed for extension (can be subclassed), but the method 'toString' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Consumer' final or making the method 'toString' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\Facultate\POO\teme\POO\tema2\.\src\dataSet\Consumer.java:182:20: '+' should be on a new line. [OperatorWrap]
[ERROR] D:\Facultate\POO\teme\POO\tema2\.\src\dataSet\Consumer.java:183:32: '+' should be on a new line. [OperatorWrap]
[ERROR] D:\Facultate\POO\teme\POO\tema2\.\src\dataSet\Consumer.java:184:50: '+' should be on a new line. [OperatorWrap]
[ERROR] D:\Facultate\POO\teme\POO\tema2\.\src\dataSet\Consumer.java:185:42: '+' should be on a new line. [OperatorWrap]
[ERROR] D:\Facultate\POO\teme\POO\tema2\.\src\dataSet\Consumers.java:1:9: Name 'dataSet' must match pattern '^[a-z]+(\.[a-zA-Z_][a-zA-Z0-9_]*)*$'. [PackageName]
[ERROR] D:\Facultate\POO\teme\POO\tema2\.\src\dataSet\Consumers.java:10:5: Class 'Consumers' looks like designed for extension (can be subclassed), but the method 'getConsumers' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Consumers' final or making the method 'getConsumers' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\Facultate\POO\teme\POO\tema2\.\src\dataSet\Consumers.java:14:5: Class 'Consumers' looks like designed for extension (can be subclassed), but the method 'checkContracts' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Consumers' final or making the method 'checkContracts' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\Facultate\POO\teme\POO\tema2\.\src\dataSet\Consumers.java:14:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] D:\Facultate\POO\teme\POO\tema2\.\src\dataSet\Consumers.java:24:5: Class 'Consumers' looks like designed for extension (can be subclassed), but the method 'makeContracts' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Consumers' final or making the method 'makeContracts' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\Facultate\POO\teme\POO\tema2\.\src\dataSet\Consumers.java:24:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] D:\Facultate\POO\teme\POO\tema2\.\src\dataSet\Consumers.java:29: Line is longer than 100 characters (found 114). [LineLength]
[ERROR] D:\Facultate\POO\teme\POO\tema2\.\src\dataSet\Consumers.java:35:5: Class 'Consumers' looks like designed for extension (can be subclassed), but the method 'generateBills' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Consumers' final or making the method 'generateBills' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\Facultate\POO\teme\POO\tema2\.\src\dataSet\Consumers.java:35:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] D:\Facultate\POO\teme\POO\tema2\.\src\dataSet\Consumers.java:44:5: Class 'Consumers' looks like designed for extension (can be subclassed), but the method 'payBills' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Consumers' final or making the method 'payBills' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\Facultate\POO\teme\POO\tema2\.\src\dataSet\Consumers.java:44:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] D:\Facultate\POO\teme\POO\tema2\.\src\dataSet\Consumers.java:52:5: Class 'Consumers' looks like designed for extension (can be subclassed), but the method 'setConsumers' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Consumers' final or making the method 'setConsumers' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\Facultate\POO\teme\POO\tema2\.\src\dataSet\Consumers.java:52:30: Parameter consumers should be final. [FinalParameters]
[ERROR] D:\Facultate\POO\teme\POO\tema2\.\src\dataSet\Consumers.java:56:5: Class 'Consumers' looks like designed for extension (can be subclassed), but the method 'addConsumer' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Consumers' final or making the method 'addConsumer' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\Facultate\POO\teme\POO\tema2\.\src\dataSet\Consumers.java:56:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] D:\Facultate\POO\teme\POO\tema2\.\src\dataSet\Consumers.java:56:29: Parameter consumer should be final. [FinalParameters]
[ERROR] D:\Facultate\POO\teme\POO\tema2\.\src\dataSet\Consumers.java:60:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] D:\Facultate\POO\teme\POO\tema2\.\src\dataSet\Consumers.java:61:9: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] D:\Facultate\POO\teme\POO\tema2\.\src\dataSet\Consumers.java:67:5: Class 'Consumers' looks like designed for extension (can be subclassed), but the method 'toString' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Consumers' final or making the method 'toString' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\Facultate\POO\teme\POO\tema2\.\src\dataSet\Contract.java:1:9: Name 'dataSet' must match pattern '^[a-z]+(\.[a-zA-Z_][a-zA-Z0-9_]*)*$'. [PackageName]
[ERROR] D:\Facultate\POO\teme\POO\tema2\.\src\dataSet\Contract.java:8:21: Parameter consumerId should be final. [FinalParameters]
[ERROR] D:\Facultate\POO\teme\POO\tema2\.\src\dataSet\Contract.java:8:37: Parameter price should be final. [FinalParameters]
[ERROR] D:\Facultate\POO\teme\POO\tema2\.\src\dataSet\Contract.java:8:48: Parameter remainedContractMonths should be final. [FinalParameters]
[ERROR] D:\Facultate\POO\teme\POO\tema2\.\src\dataSet\Contract.java:14:5: Class 'Contract' looks like designed for extension (can be subclassed), but the method 'getConsumerId' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Contract' final or making the method 'getConsumerId' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\Facultate\POO\teme\POO\tema2\.\src\dataSet\Contract.java:18:5: Class 'Contract' looks like designed for extension (can be subclassed), but the method 'setConsumerId' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Contract' final or making the method 'setConsumerId' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\Facultate\POO\teme\POO\tema2\.\src\dataSet\Contract.java:18:31: Parameter consumerId should be final. [FinalParameters]
[ERROR] D:\Facultate\POO\teme\POO\tema2\.\src\dataSet\Contract.java:22:5: Class 'Contract' looks like designed for extension (can be subclassed), but the method 'getPrice' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Contract' final or making the method 'getPrice' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\Facultate\POO\teme\POO\tema2\.\src\dataSet\Contract.java:26:5: Class 'Contract' looks like designed for extension (can be subclassed), but the method 'setPrice' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Contract' final or making the method 'setPrice' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\Facultate\POO\teme\POO\tema2\.\src\dataSet\Contract.java:26:26: Parameter price should be final. [FinalParameters]
[ERROR] D:\Facultate\POO\teme\POO\tema2\.\src\dataSet\Contract.java:30:5: Class 'Contract' looks like designed for extension (can be subclassed), but the method 'getRemainedContractMonths' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Contract' final or making the method 'getRemainedContractMonths' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\Facultate\POO\teme\POO\tema2\.\src\dataSet\Contract.java:34:5: Class 'Contract' looks like designed for extension (can be subclassed), but the method 'setRemainedContractMonths' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Contract' final or making the method 'setRemainedContractMonths' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\Facultate\POO\teme\POO\tema2\.\src\dataSet\Contract.java:34:43: Parameter remainedContractMonths should be final. [FinalParameters]
[ERROR] D:\Facultate\POO\teme\POO\tema2\.\src\dataSet\Contract.java:38:5: Class 'Contract' looks like designed for extension (can be subclassed), but the method 'toString' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Contract' final or making the method 'toString' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\Facultate\POO\teme\POO\tema2\.\src\dataSet\Contract.java:40:20: '+' should be on a new line. [OperatorWrap]
[ERROR] D:\Facultate\POO\teme\POO\tema2\.\src\dataSet\Contract.java:41:48: '+' should be on a new line. [OperatorWrap]
[ERROR] D:\Facultate\POO\teme\POO\tema2\.\src\dataSet\Contract.java:42:40: '+' should be on a new line. [OperatorWrap]
[ERROR] D:\Facultate\POO\teme\POO\tema2\.\src\dataSet\Contract.java:43:74: '+' should be on a new line. [OperatorWrap]
[ERROR] D:\Facultate\POO\teme\POO\tema2\.\src\dataSet\Distributor.java:1:9: Name 'dataSet' must match pattern '^[a-z]+(\.[a-zA-Z_][a-zA-Z0-9_]*)*$'. [PackageName]
[ERROR] D:\Facultate\POO\teme\POO\tema2\.\src\dataSet\Distributor.java:23: Line is longer than 100 characters (found 108). [LineLength]
[ERROR] D:\Facultate\POO\teme\POO\tema2\.\src\dataSet\Distributor.java:23:24: Parameter id should be final. [FinalParameters]
[ERROR] D:\Facultate\POO\teme\POO\tema2\.\src\dataSet\Distributor.java:23:32: Parameter contractLength should be final. [FinalParameters]
[ERROR] D:\Facultate\POO\teme\POO\tema2\.\src\dataSet\Distributor.java:23:52: Parameter budget should be final. [FinalParameters]
[ERROR] D:\Facultate\POO\teme\POO\tema2\.\src\dataSet\Distributor.java:23:64: Parameter infrastructureCost should be final. [FinalParameters]
[ERROR] D:\Facultate\POO\teme\POO\tema2\.\src\dataSet\Distributor.java:23:88: Parameter productionCost should be final. [FinalParameters]
[ERROR] D:\Facultate\POO\teme\POO\tema2\.\src\dataSet\Distributor.java:32:5: Class 'Distributor' looks like designed for extension (can be subclassed), but the method 'updatesCosts' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Distributor' final or making the method 'updatesCosts' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\Facultate\POO\teme\POO\tema2\.\src\dataSet\Distributor.java:32:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] D:\Facultate\POO\teme\POO\tema2\.\src\dataSet\Distributor.java:32:30: Parameter infrastructureCost should be final. [FinalParameters]
[ERROR] D:\Facultate\POO\teme\POO\tema2\.\src\dataSet\Distributor.java:32:34: 'infrastructureCost' hides a field. [HiddenField]
[ERROR] D:\Facultate\POO\teme\POO\tema2\.\src\dataSet\Distributor.java:32:54: Parameter productionCost should be final. [FinalParameters]
[ERROR] D:\Facultate\POO\teme\POO\tema2\.\src\dataSet\Distributor.java:32:58: 'productionCost' hides a field. [HiddenField]
[ERROR] D:\Facultate\POO\teme\POO\tema2\.\src\dataSet\Distributor.java:38:5: Class 'Distributor' looks like designed for extension (can be subclassed), but the method 'addContract' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Distributor' final or making the method 'addContract' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\Facultate\POO\teme\POO\tema2\.\src\dataSet\Distributor.java:38:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] D:\Facultate\POO\teme\POO\tema2\.\src\dataSet\Distributor.java:38:29: Parameter customerId should be final. [FinalParameters]
[ERROR] D:\Facultate\POO\teme\POO\tema2\.\src\dataSet\Distributor.java:50:5: Class 'Distributor' looks like designed for extension (can be subclassed), but the method 'clientBankrupt' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Distributor' final or making the method 'clientBankrupt' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\Facultate\POO\teme\POO\tema2\.\src\dataSet\Distributor.java:50:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] D:\Facultate\POO\teme\POO\tema2\.\src\dataSet\Distributor.java:50:32: Parameter clientId should be final. [FinalParameters]
[ERROR] D:\Facultate\POO\teme\POO\tema2\.\src\dataSet\Distributor.java:55:5: Class 'Distributor' looks like designed for extension (can be subclassed), but the method 'declareBankruptcy' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Distributor' final or making the method 'declareBankruptcy' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\Facultate\POO\teme\POO\tema2\.\src\dataSet\Distributor.java:55:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] D:\Facultate\POO\teme\POO\tema2\.\src\dataSet\Distributor.java:65:5: Class 'Distributor' looks like designed for extension (can be subclassed), but the method 'payBills' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Distributor' final or making the method 'payBills' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\Facultate\POO\teme\POO\tema2\.\src\dataSet\Distributor.java:65:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] D:\Facultate\POO\teme\POO\tema2\.\src\dataSet\Distributor.java:74:5: Class 'Distributor' looks like designed for extension (can be subclassed), but the method 'receivePayment' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Distributor' final or making the method 'receivePayment' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\Facultate\POO\teme\POO\tema2\.\src\dataSet\Distributor.java:74:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] D:\Facultate\POO\teme\POO\tema2\.\src\dataSet\Distributor.java:74:32: Parameter invoice should be final. [FinalParameters]
[ERROR] D:\Facultate\POO\teme\POO\tema2\.\src\dataSet\Distributor.java:78:5: Class 'Distributor' looks like designed for extension (can be subclassed), but the method 'computePrices' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Distributor' final or making the method 'computePrices' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\Facultate\POO\teme\POO\tema2\.\src\dataSet\Distributor.java:78:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] D:\Facultate\POO\teme\POO\tema2\.\src\dataSet\Distributor.java:80:51: '0.2' is a magic number. [MagicNumber]
[ERROR] D:\Facultate\POO\teme\POO\tema2\.\src\dataSet\Distributor.java:84: Line is longer than 100 characters (found 125). [LineLength]
[ERROR] D:\Facultate\POO\teme\POO\tema2\.\src\dataSet\Distributor.java:84:68: 'typecast' is not followed by whitespace. [WhitespaceAfter]
[ERROR] D:\Facultate\POO\teme\POO\tema2\.\src\dataSet\Distributor.java:84:102: 'typecast' is not followed by whitespace. [WhitespaceAfter]
[ERROR] D:\Facultate\POO\teme\POO\tema2\.\src\dataSet\Distributor.java:84:125: '+' should be on a new line. [OperatorWrap]
[ERROR] D:\Facultate\POO\teme\POO\tema2\.\src\dataSet\Distributor.java:89:5: Class 'Distributor' looks like designed for extension (can be subclassed), but the method 'computePricesBills' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Distributor' final or making the method 'computePricesBills' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\Facultate\POO\teme\POO\tema2\.\src\dataSet\Distributor.java:89:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] D:\Facultate\POO\teme\POO\tema2\.\src\dataSet\Distributor.java:93:5: Class 'Distributor' looks like designed for extension (can be subclassed), but the method 'getContracts' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Distributor' final or making the method 'getContracts' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\Facultate\POO\teme\POO\tema2\.\src\dataSet\Distributor.java:97:5: Class 'Distributor' looks like designed for extension (can be subclassed), but the method 'getContractCost' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Distributor' final or making the method 'getContractCost' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\Facultate\POO\teme\POO\tema2\.\src\dataSet\Distributor.java:101:5: Class 'Distributor' looks like designed for extension (can be subclassed), but the method 'setContractCost' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Distributor' final or making the method 'setContractCost' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\Facultate\POO\teme\POO\tema2\.\src\dataSet\Distributor.java:101:33: Parameter contractCost should be final. [FinalParameters]
[ERROR] D:\Facultate\POO\teme\POO\tema2\.\src\dataSet\Distributor.java:105:5: Class 'Distributor' looks like designed for extension (can be subclassed), but the method 'getProfit' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Distributor' final or making the method 'getProfit' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\Facultate\POO\teme\POO\tema2\.\src\dataSet\Distributor.java:109:5: Class 'Distributor' looks like designed for extension (can be subclassed), but the method 'setProfit' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Distributor' final or making the method 'setProfit' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\Facultate\POO\teme\POO\tema2\.\src\dataSet\Distributor.java:109:27: Parameter profit should be final. [FinalParameters]
[ERROR] D:\Facultate\POO\teme\POO\tema2\.\src\dataSet\Distributor.java:113:5: Class 'Distributor' looks like designed for extension (can be subclassed), but the method 'getMonthlyClients' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Distributor' final or making the method 'getMonthlyClients' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\Facultate\POO\teme\POO\tema2\.\src\dataSet\Distributor.java:117:5: Class 'Distributor' looks like designed for extension (can be subclassed), but the method 'setMonthlyClients' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Distributor' final or making the method 'setMonthlyClients' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\Facultate\POO\teme\POO\tema2\.\src\dataSet\Distributor.java:117:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] D:\Facultate\POO\teme\POO\tema2\.\src\dataSet\Distributor.java:121:5: Class 'Distributor' looks like designed for extension (can be subclassed), but the method 'setNumberOfClients' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Distributor' final or making the method 'setNumberOfClients' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\Facultate\POO\teme\POO\tema2\.\src\dataSet\Distributor.java:121:36: Parameter numberOfClients should be final. [FinalParameters]
[ERROR] D:\Facultate\POO\teme\POO\tema2\.\src\dataSet\Distributor.java:125:5: Class 'Distributor' looks like designed for extension (can be subclassed), but the method 'getNumberOfClients' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Distributor' final or making the method 'getNumberOfClients' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\Facultate\POO\teme\POO\tema2\.\src\dataSet\Distributor.java:129:5: Class 'Distributor' looks like designed for extension (can be subclassed), but the method 'getFinalProductionCost' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Distributor' final or making the method 'getFinalProductionCost' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\Facultate\POO\teme\POO\tema2\.\src\dataSet\Distributor.java:133:5: Class 'Distributor' looks like designed for extension (can be subclassed), but the method 'setFinalProductionCost' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Distributor' final or making the method 'setFinalProductionCost' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\Facultate\POO\teme\POO\tema2\.\src\dataSet\Distributor.java:133:40: Parameter finalProductionCost should be final. [FinalParameters]
[ERROR] D:\Facultate\POO\teme\POO\tema2\.\src\dataSet\Distributor.java:137:5: Class 'Distributor' looks like designed for extension (can be subclassed), but the method 'getId' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Distributor' final or making the method 'getId' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\Facultate\POO\teme\POO\tema2\.\src\dataSet\Distributor.java:141:5: Class 'Distributor' looks like designed for extension (can be subclassed), but the method 'setId' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Distributor' final or making the method 'setId' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\Facultate\POO\teme\POO\tema2\.\src\dataSet\Distributor.java:141:23: Parameter id should be final. [FinalParameters]
[ERROR] D:\Facultate\POO\teme\POO\tema2\.\src\dataSet\Distributor.java:145:5: Class 'Distributor' looks like designed for extension (can be subclassed), but the method 'getContractLength' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Distributor' final or making the method 'getContractLength' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\Facultate\POO\teme\POO\tema2\.\src\dataSet\Distributor.java:149:5: Class 'Distributor' looks like designed for extension (can be subclassed), but the method 'setContractLength' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Distributor' final or making the method 'setContractLength' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\Facultate\POO\teme\POO\tema2\.\src\dataSet\Distributor.java:149:35: Parameter contractLength should be final. [FinalParameters]
[ERROR] D:\Facultate\POO\teme\POO\tema2\.\src\dataSet\Distributor.java:153:5: Class 'Distributor' looks like designed for extension (can be subclassed), but the method 'getBudget' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Distributor' final or making the method 'getBudget' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\Facultate\POO\teme\POO\tema2\.\src\dataSet\Distributor.java:157:5: Class 'Distributor' looks like designed for extension (can be subclassed), but the method 'setBudget' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Distributor' final or making the method 'setBudget' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\Facultate\POO\teme\POO\tema2\.\src\dataSet\Distributor.java:157:27: Parameter budget should be final. [FinalParameters]
[ERROR] D:\Facultate\POO\teme\POO\tema2\.\src\dataSet\Distributor.java:161:5: Class 'Distributor' looks like designed for extension (can be subclassed), but the method 'getInfrastructureCost' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Distributor' final or making the method 'getInfrastructureCost' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\Facultate\POO\teme\POO\tema2\.\src\dataSet\Distributor.java:165:5: Class 'Distributor' looks like designed for extension (can be subclassed), but the method 'setInfrastructureCost' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Distributor' final or making the method 'setInfrastructureCost' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\Facultate\POO\teme\POO\tema2\.\src\dataSet\Distributor.java:165:39: Parameter infrastructureCost should be final. [FinalParameters]
[ERROR] D:\Facultate\POO\teme\POO\tema2\.\src\dataSet\Distributor.java:169:5: Class 'Distributor' looks like designed for extension (can be subclassed), but the method 'getProductionCost' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Distributor' final or making the method 'getProductionCost' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\Facultate\POO\teme\POO\tema2\.\src\dataSet\Distributor.java:173:5: Class 'Distributor' looks like designed for extension (can be subclassed), but the method 'setProductionCost' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Distributor' final or making the method 'setProductionCost' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\Facultate\POO\teme\POO\tema2\.\src\dataSet\Distributor.java:173:35: Parameter productionCost should be final. [FinalParameters]
[ERROR] D:\Facultate\POO\teme\POO\tema2\.\src\dataSet\Distributor.java:177:5: Class 'Distributor' looks like designed for extension (can be subclassed), but the method 'isBankrupt' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Distributor' final or making the method 'isBankrupt' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\Facultate\POO\teme\POO\tema2\.\src\dataSet\Distributor.java:181:5: Class 'Distributor' looks like designed for extension (can be subclassed), but the method 'setBankrupt' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Distributor' final or making the method 'setBankrupt' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\Facultate\POO\teme\POO\tema2\.\src\dataSet\Distributor.java:181:29: Parameter bankrupt should be final. [FinalParameters]
[ERROR] D:\Facultate\POO\teme\POO\tema2\.\src\dataSet\Distributor.java:185:5: Class 'Distributor' looks like designed for extension (can be subclassed), but the method 'exportContracts' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Distributor' final or making the method 'exportContracts' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\Facultate\POO\teme\POO\tema2\.\src\dataSet\Distributor.java:185:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] D:\Facultate\POO\teme\POO\tema2\.\src\dataSet\Distributor.java:185:34: '{' is not preceded with whitespace. [WhitespaceAround]
[ERROR] D:\Facultate\POO\teme\POO\tema2\.\src\dataSet\Distributor.java:191:5: Class 'Distributor' looks like designed for extension (can be subclassed), but the method 'toString' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Distributor' final or making the method 'toString' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\Facultate\POO\teme\POO\tema2\.\src\dataSet\Distributor.java:193:20: '+' should be on a new line. [OperatorWrap]
[ERROR] D:\Facultate\POO\teme\POO\tema2\.\src\dataSet\Distributor.java:194:32: '+' should be on a new line. [OperatorWrap]
[ERROR] D:\Facultate\POO\teme\POO\tema2\.\src\dataSet\Distributor.java:195:42: '+' should be on a new line. [OperatorWrap]
[ERROR] D:\Facultate\POO\teme\POO\tema2\.\src\dataSet\Distributor.java:196:50: '+' should be on a new line. [OperatorWrap]
[ERROR] D:\Facultate\POO\teme\POO\tema2\.\src\dataSet\Distributor.java:197:56: '+' should be on a new line. [OperatorWrap]
[ERROR] D:\Facultate\POO\teme\POO\tema2\.\src\dataSet\Distributors.java:1:9: Name 'dataSet' must match pattern '^[a-z]+(\.[a-zA-Z_][a-zA-Z0-9_]*)*$'. [PackageName]
[ERROR] D:\Facultate\POO\teme\POO\tema2\.\src\dataSet\Distributors.java:11:5: Class 'Distributors' looks like designed for extension (can be subclassed), but the method 'getDistributors' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Distributors' final or making the method 'getDistributors' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\Facultate\POO\teme\POO\tema2\.\src\dataSet\Distributors.java:15:5: Class 'Distributors' looks like designed for extension (can be subclassed), but the method 'setDistributors' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Distributors' final or making the method 'setDistributors' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\Facultate\POO\teme\POO\tema2\.\src\dataSet\Distributors.java:15:33: Parameter distributors should be final. [FinalParameters]
[ERROR] D:\Facultate\POO\teme\POO\tema2\.\src\dataSet\Distributors.java:19:5: Class 'Distributors' looks like designed for extension (can be subclassed), but the method 'addDistributor' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Distributors' final or making the method 'addDistributor' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\Facultate\POO\teme\POO\tema2\.\src\dataSet\Distributors.java:19:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] D:\Facultate\POO\teme\POO\tema2\.\src\dataSet\Distributors.java:19:32: Parameter distributor should be final. [FinalParameters]
[ERROR] D:\Facultate\POO\teme\POO\tema2\.\src\dataSet\Distributors.java:23:5: Class 'Distributors' looks like designed for extension (can be subclassed), but the method 'updateCosts' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Distributors' final or making the method 'updateCosts' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\Facultate\POO\teme\POO\tema2\.\src\dataSet\Distributors.java:23:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] D:\Facultate\POO\teme\POO\tema2\.\src\dataSet\Distributors.java:23:29: Parameter id should be final. [FinalParameters]
[ERROR] D:\Facultate\POO\teme\POO\tema2\.\src\dataSet\Distributors.java:23:37: Parameter infrastructureCost should be final. [FinalParameters]
[ERROR] D:\Facultate\POO\teme\POO\tema2\.\src\dataSet\Distributors.java:23:61: Parameter productionCost should be final. [FinalParameters]
[ERROR] D:\Facultate\POO\teme\POO\tema2\.\src\dataSet\Distributors.java:27:5: Class 'Distributors' looks like designed for extension (can be subclassed), but the method 'computePrices' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Distributors' final or making the method 'computePrices' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\Facultate\POO\teme\POO\tema2\.\src\dataSet\Distributors.java:27:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] D:\Facultate\POO\teme\POO\tema2\.\src\dataSet\Distributors.java:29:23: '32000' is a magic number. [MagicNumber]
[ERROR] D:\Facultate\POO\teme\POO\tema2\.\src\dataSet\Distributors.java:41:5: Class 'Distributors' looks like designed for extension (can be subclassed), but the method 'payBills' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Distributors' final or making the method 'payBills' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\Facultate\POO\teme\POO\tema2\.\src\dataSet\Distributors.java:41:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] D:\Facultate\POO\teme\POO\tema2\.\src\dataSet\Distributors.java:49:5: Class 'Distributors' looks like designed for extension (can be subclassed), but the method 'getDistributorMinId' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Distributors' final or making the method 'getDistributorMinId' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\Facultate\POO\teme\POO\tema2\.\src\dataSet\Distributors.java:53:5: Class 'Distributors' looks like designed for extension (can be subclassed), but the method 'setDistributorMinId' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Distributors' final or making the method 'setDistributorMinId' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\Facultate\POO\teme\POO\tema2\.\src\dataSet\Distributors.java:53:37: Parameter distributorMinId should be final. [FinalParameters]
[ERROR] D:\Facultate\POO\teme\POO\tema2\.\src\dataSet\Distributors.java:57:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] D:\Facultate\POO\teme\POO\tema2\.\src\dataSet\Distributors.java:58:9: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] D:\Facultate\POO\teme\POO\tema2\.\src\dataSet\Distributors.java:64:5: Class 'Distributors' looks like designed for extension (can be subclassed), but the method 'prepareExport' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Distributors' final or making the method 'prepareExport' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\Facultate\POO\teme\POO\tema2\.\src\dataSet\Distributors.java:64:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] D:\Facultate\POO\teme\POO\tema2\.\src\dataSet\Distributors.java:70:5: Class 'Distributors' looks like designed for extension (can be subclassed), but the method 'toString' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Distributors' final or making the method 'toString' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\Facultate\POO\teme\POO\tema2\.\src\input\ConsumerInput.java:8:5: Class 'ConsumerInput' looks like designed for extension (can be subclassed), but the method 'getId' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ConsumerInput' final or making the method 'getId' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\Facultate\POO\teme\POO\tema2\.\src\input\ConsumerInput.java:12:5: Class 'ConsumerInput' looks like designed for extension (can be subclassed), but the method 'setId' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ConsumerInput' final or making the method 'setId' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\Facultate\POO\teme\POO\tema2\.\src\input\ConsumerInput.java:12:23: Parameter id should be final. [FinalParameters]
[ERROR] D:\Facultate\POO\teme\POO\tema2\.\src\input\ConsumerInput.java:16:5: Class 'ConsumerInput' looks like designed for extension (can be subclassed), but the method 'getInitialBudget' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ConsumerInput' final or making the method 'getInitialBudget' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\Facultate\POO\teme\POO\tema2\.\src\input\ConsumerInput.java:20:5: Class 'ConsumerInput' looks like designed for extension (can be subclassed), but the method 'setInitialBudget' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ConsumerInput' final or making the method 'setInitialBudget' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\Facultate\POO\teme\POO\tema2\.\src\input\ConsumerInput.java:20:34: Parameter initialBudget should be final. [FinalParameters]
[ERROR] D:\Facultate\POO\teme\POO\tema2\.\src\input\ConsumerInput.java:24:5: Class 'ConsumerInput' looks like designed for extension (can be subclassed), but the method 'getMonthlyIncome' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ConsumerInput' final or making the method 'getMonthlyIncome' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\Facultate\POO\teme\POO\tema2\.\src\input\ConsumerInput.java:28:5: Class 'ConsumerInput' looks like designed for extension (can be subclassed), but the method 'setMonthlyIncome' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ConsumerInput' final or making the method 'setMonthlyIncome' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\Facultate\POO\teme\POO\tema2\.\src\input\ConsumerInput.java:28:34: Parameter monthlyIncome should be final. [FinalParameters]
[ERROR] D:\Facultate\POO\teme\POO\tema2\.\src\input\ConsumerInput.java:32:5: Class 'ConsumerInput' looks like designed for extension (can be subclassed), but the method 'toString' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ConsumerInput' final or making the method 'toString' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\Facultate\POO\teme\POO\tema2\.\src\input\ConsumerInput.java:34:33: '+' should be on a new line. [OperatorWrap]
[ERROR] D:\Facultate\POO\teme\POO\tema2\.\src\input\ConsumerInput.java:35:28: '+' should be on a new line. [OperatorWrap]
[ERROR] D:\Facultate\POO\teme\POO\tema2\.\src\input\ConsumerInput.java:36:52: '+' should be on a new line. [OperatorWrap]
[ERROR] D:\Facultate\POO\teme\POO\tema2\.\src\input\ConsumerInput.java:37:52: '+' should be on a new line. [OperatorWrap]
[ERROR] D:\Facultate\POO\teme\POO\tema2\.\src\input\CostChange.java:8:5: Class 'CostChange' looks like designed for extension (can be subclassed), but the method 'getId' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'CostChange' final or making the method 'getId' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\Facultate\POO\teme\POO\tema2\.\src\input\CostChange.java:12:5: Class 'CostChange' looks like designed for extension (can be subclassed), but the method 'setId' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'CostChange' final or making the method 'setId' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\Facultate\POO\teme\POO\tema2\.\src\input\CostChange.java:12:23: Parameter id should be final. [FinalParameters]
[ERROR] D:\Facultate\POO\teme\POO\tema2\.\src\input\CostChange.java:16:5: Class 'CostChange' looks like designed for extension (can be subclassed), but the method 'getInfrastructureCost' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'CostChange' final or making the method 'getInfrastructureCost' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\Facultate\POO\teme\POO\tema2\.\src\input\CostChange.java:20:5: Class 'CostChange' looks like designed for extension (can be subclassed), but the method 'setInfrastructureCost' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'CostChange' final or making the method 'setInfrastructureCost' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\Facultate\POO\teme\POO\tema2\.\src\input\CostChange.java:20:39: Parameter infrastructureCost should be final. [FinalParameters]
[ERROR] D:\Facultate\POO\teme\POO\tema2\.\src\input\CostChange.java:24:5: Class 'CostChange' looks like designed for extension (can be subclassed), but the method 'getProductionCost' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'CostChange' final or making the method 'getProductionCost' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\Facultate\POO\teme\POO\tema2\.\src\input\CostChange.java:28:5: Class 'CostChange' looks like designed for extension (can be subclassed), but the method 'setProductionCost' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'CostChange' final or making the method 'setProductionCost' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\Facultate\POO\teme\POO\tema2\.\src\input\CostChange.java:28:35: Parameter productionCost should be final. [FinalParameters]
[ERROR] D:\Facultate\POO\teme\POO\tema2\.\src\input\DistributorInput.java:10:5: Class 'DistributorInput' looks like designed for extension (can be subclassed), but the method 'getId' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'DistributorInput' final or making the method 'getId' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\Facultate\POO\teme\POO\tema2\.\src\input\DistributorInput.java:14:5: Class 'DistributorInput' looks like designed for extension (can be subclassed), but the method 'setId' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'DistributorInput' final or making the method 'setId' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\Facultate\POO\teme\POO\tema2\.\src\input\DistributorInput.java:14:23: Parameter id should be final. [FinalParameters]
[ERROR] D:\Facultate\POO\teme\POO\tema2\.\src\input\DistributorInput.java:18:5: Class 'DistributorInput' looks like designed for extension (can be subclassed), but the method 'getContractLength' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'DistributorInput' final or making the method 'getContractLength' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\Facultate\POO\teme\POO\tema2\.\src\input\DistributorInput.java:22:5: Class 'DistributorInput' looks like designed for extension (can be subclassed), but the method 'setContractLength' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'DistributorInput' final or making the method 'setContractLength' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\Facultate\POO\teme\POO\tema2\.\src\input\DistributorInput.java:22:35: Parameter contractLength should be final. [FinalParameters]
[ERROR] D:\Facultate\POO\teme\POO\tema2\.\src\input\DistributorInput.java:26:5: Class 'DistributorInput' looks like designed for extension (can be subclassed), but the method 'getInitialBudget' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'DistributorInput' final or making the method 'getInitialBudget' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\Facultate\POO\teme\POO\tema2\.\src\input\DistributorInput.java:30:5: Class 'DistributorInput' looks like designed for extension (can be subclassed), but the method 'setInitialBudget' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'DistributorInput' final or making the method 'setInitialBudget' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\Facultate\POO\teme\POO\tema2\.\src\input\DistributorInput.java:30:34: Parameter initialBudget should be final. [FinalParameters]
[ERROR] D:\Facultate\POO\teme\POO\tema2\.\src\input\DistributorInput.java:34:5: Class 'DistributorInput' looks like designed for extension (can be subclassed), but the method 'getInitialInfrastructureCost' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'DistributorInput' final or making the method 'getInitialInfrastructureCost' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\Facultate\POO\teme\POO\tema2\.\src\input\DistributorInput.java:38:5: Class 'DistributorInput' looks like designed for extension (can be subclassed), but the method 'setInitialInfrastructureCost' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'DistributorInput' final or making the method 'setInitialInfrastructureCost' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\Facultate\POO\teme\POO\tema2\.\src\input\DistributorInput.java:38:46: Parameter initialInfrastructureCost should be final. [FinalParameters]
[ERROR] D:\Facultate\POO\teme\POO\tema2\.\src\input\DistributorInput.java:42:5: Class 'DistributorInput' looks like designed for extension (can be subclassed), but the method 'getInitialProductionCost' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'DistributorInput' final or making the method 'getInitialProductionCost' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\Facultate\POO\teme\POO\tema2\.\src\input\DistributorInput.java:46:5: Class 'DistributorInput' looks like designed for extension (can be subclassed), but the method 'setInitialProductionCost' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'DistributorInput' final or making the method 'setInitialProductionCost' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\Facultate\POO\teme\POO\tema2\.\src\input\DistributorInput.java:46:42: Parameter initialProductionCost should be final. [FinalParameters]
[ERROR] D:\Facultate\POO\teme\POO\tema2\.\src\input\DistributorInput.java:50:5: Class 'DistributorInput' looks like designed for extension (can be subclassed), but the method 'toString' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'DistributorInput' final or making the method 'toString' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\Facultate\POO\teme\POO\tema2\.\src\input\DistributorInput.java:52:36: '+' should be on a new line. [OperatorWrap]
[ERROR] D:\Facultate\POO\teme\POO\tema2\.\src\input\DistributorInput.java:53:28: '+' should be on a new line. [OperatorWrap]
[ERROR] D:\Facultate\POO\teme\POO\tema2\.\src\input\DistributorInput.java:54:54: '+' should be on a new line. [OperatorWrap]
[ERROR] D:\Facultate\POO\teme\POO\tema2\.\src\input\DistributorInput.java:55:52: '+' should be on a new line. [OperatorWrap]
[ERROR] D:\Facultate\POO\teme\POO\tema2\.\src\input\DistributorInput.java:56:76: '+' should be on a new line. [OperatorWrap]
[ERROR] D:\Facultate\POO\teme\POO\tema2\.\src\input\DistributorInput.java:57:68: '+' should be on a new line. [OperatorWrap]
[ERROR] D:\Facultate\POO\teme\POO\tema2\.\src\input\InitialDataInput.java:9:5: Class 'InitialDataInput' looks like designed for extension (can be subclassed), but the method 'getConsumers' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'InitialDataInput' final or making the method 'getConsumers' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\Facultate\POO\teme\POO\tema2\.\src\input\InitialDataInput.java:13:5: Class 'InitialDataInput' looks like designed for extension (can be subclassed), but the method 'setConsumers' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'InitialDataInput' final or making the method 'setConsumers' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\Facultate\POO\teme\POO\tema2\.\src\input\InitialDataInput.java:13:30: Parameter consumers should be final. [FinalParameters]
[ERROR] D:\Facultate\POO\teme\POO\tema2\.\src\input\InitialDataInput.java:17:5: Class 'InitialDataInput' looks like designed for extension (can be subclassed), but the method 'getDistributors' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'InitialDataInput' final or making the method 'getDistributors' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\Facultate\POO\teme\POO\tema2\.\src\input\InitialDataInput.java:21:5: Class 'InitialDataInput' looks like designed for extension (can be subclassed), but the method 'setDistributors' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'InitialDataInput' final or making the method 'setDistributors' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\Facultate\POO\teme\POO\tema2\.\src\input\InitialDataInput.java:21:33: Parameter distributors should be final. [FinalParameters]
[ERROR] D:\Facultate\POO\teme\POO\tema2\.\src\input\InitialDataInput.java:25:5: Class 'InitialDataInput' looks like designed for extension (can be subclassed), but the method 'toString' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'InitialDataInput' final or making the method 'toString' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\Facultate\POO\teme\POO\tema2\.\src\input\InitialDataInput.java:27:36: '+' should be on a new line. [OperatorWrap]
[ERROR] D:\Facultate\POO\teme\POO\tema2\.\src\input\InitialDataInput.java:28:42: '+' should be on a new line. [OperatorWrap]
[ERROR] D:\Facultate\POO\teme\POO\tema2\.\src\input\InitialDataInput.java:29:50: '+' should be on a new line. [OperatorWrap]
[ERROR] D:\Facultate\POO\teme\POO\tema2\.\src\input\InputData.java:10:5: Class 'InputData' looks like designed for extension (can be subclassed), but the method 'getNumberOfTurns' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'InputData' final or making the method 'getNumberOfTurns' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\Facultate\POO\teme\POO\tema2\.\src\input\InputData.java:14:5: Class 'InputData' looks like designed for extension (can be subclassed), but the method 'setNumberOfTurns' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'InputData' final or making the method 'setNumberOfTurns' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\Facultate\POO\teme\POO\tema2\.\src\input\InputData.java:14:34: Parameter numberOfTurns should be final. [FinalParameters]
[ERROR] D:\Facultate\POO\teme\POO\tema2\.\src\input\InputData.java:18:5: Class 'InputData' looks like designed for extension (can be subclassed), but the method 'getInitialData' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'InputData' final or making the method 'getInitialData' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\Facultate\POO\teme\POO\tema2\.\src\input\InputData.java:22:5: Class 'InputData' looks like designed for extension (can be subclassed), but the method 'setInitialData' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'InputData' final or making the method 'setInitialData' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\Facultate\POO\teme\POO\tema2\.\src\input\InputData.java:22:32: Parameter initialData should be final. [FinalParameters]
[ERROR] D:\Facultate\POO\teme\POO\tema2\.\src\input\InputData.java:26:5: Class 'InputData' looks like designed for extension (can be subclassed), but the method 'getMonthlyUpdates' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'InputData' final or making the method 'getMonthlyUpdates' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\Facultate\POO\teme\POO\tema2\.\src\input\InputData.java:30:5: Class 'InputData' looks like designed for extension (can be subclassed), but the method 'setMonthlyUpdates' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'InputData' final or making the method 'setMonthlyUpdates' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\Facultate\POO\teme\POO\tema2\.\src\input\InputData.java:30:35: Parameter monthlyUpdates should be final. [FinalParameters]
[ERROR] D:\Facultate\POO\teme\POO\tema2\.\src\input\InputData.java:34:5: Class 'InputData' looks like designed for extension (can be subclassed), but the method 'toString' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'InputData' final or making the method 'toString' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\Facultate\POO\teme\POO\tema2\.\src\input\InputData.java:36:29: '+' should be on a new line. [OperatorWrap]
[ERROR] D:\Facultate\POO\teme\POO\tema2\.\src\input\InputData.java:37:50: '+' should be on a new line. [OperatorWrap]
[ERROR] D:\Facultate\POO\teme\POO\tema2\.\src\input\InputData.java:38:48: '+' should be on a new line. [OperatorWrap]
[ERROR] D:\Facultate\POO\teme\POO\tema2\.\src\input\InputData.java:39:54: '+' should be on a new line. [OperatorWrap]
[ERROR] D:\Facultate\POO\teme\POO\tema2\.\src\input\MonthlyUpdateInput.java:9:5: Class 'MonthlyUpdateInput' looks like designed for extension (can be subclassed), but the method 'getNewConsumers' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'MonthlyUpdateInput' final or making the method 'getNewConsumers' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\Facultate\POO\teme\POO\tema2\.\src\input\MonthlyUpdateInput.java:13:5: Class 'MonthlyUpdateInput' looks like designed for extension (can be subclassed), but the method 'setNewConsumers' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'MonthlyUpdateInput' final or making the method 'setNewConsumers' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\Facultate\POO\teme\POO\tema2\.\src\input\MonthlyUpdateInput.java:13:33: Parameter newConsumers should be final. [FinalParameters]
[ERROR] D:\Facultate\POO\teme\POO\tema2\.\src\input\MonthlyUpdateInput.java:17:5: Class 'MonthlyUpdateInput' looks like designed for extension (can be subclassed), but the method 'getCostsChanges' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'MonthlyUpdateInput' final or making the method 'getCostsChanges' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\Facultate\POO\teme\POO\tema2\.\src\input\MonthlyUpdateInput.java:21:5: Class 'MonthlyUpdateInput' looks like designed for extension (can be subclassed), but the method 'setCostsChanges' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'MonthlyUpdateInput' final or making the method 'setCostsChanges' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\Facultate\POO\teme\POO\tema2\.\src\input\MonthlyUpdateInput.java:21:33: Parameter costsChanges should be final. [FinalParameters]
[ERROR] D:\Facultate\POO\teme\POO\tema2\.\src\input\MonthlyUpdateInput.java:25:5: Class 'MonthlyUpdateInput' looks like designed for extension (can be subclassed), but the method 'toString' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'MonthlyUpdateInput' final or making the method 'toString' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\Facultate\POO\teme\POO\tema2\.\src\input\MonthlyUpdateInput.java:27:38: '+' should be on a new line. [OperatorWrap]
[ERROR] D:\Facultate\POO\teme\POO\tema2\.\src\input\MonthlyUpdateInput.java:28:48: '+' should be on a new line. [OperatorWrap]
[ERROR] D:\Facultate\POO\teme\POO\tema2\.\src\input\MonthlyUpdateInput.java:29:50: '+' should be on a new line. [OperatorWrap]
[ERROR] D:\Facultate\POO\teme\POO\tema2\.\src\Main.java:6:13: Using the '.*' form of import should be avoided - input.*. [AvoidStarImport]
[ERROR] D:\Facultate\POO\teme\POO\tema2\.\src\Main.java:12:1: Utility classes should not have a public or default constructor. [HideUtilityClassConstructor]
[ERROR] D:\Facultate\POO\teme\POO\tema2\.\src\Main.java:14:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] D:\Facultate\POO\teme\POO\tema2\.\src\Main.java:14:29: Parameter args should be final. [FinalParameters]
[ERROR] D:\Facultate\POO\teme\POO\tema2\.\src\Main.java:35: Line is longer than 100 characters (found 109). [LineLength]
[ERROR] D:\Facultate\POO\teme\POO\tema2\.\src\Main.java:55:13: 'for' is not followed by whitespace. [WhitespaceAfter]
[ERROR] D:\Facultate\POO\teme\POO\tema2\.\src\Main.java:56: Line is longer than 100 characters (found 103). [LineLength]
[ERROR] D:\Facultate\POO\teme\POO\tema2\.\src\Main.java:83:64: '+' should be on a new line. [OperatorWrap]
[ERROR] D:\Facultate\POO\teme\POO\tema2\.\src\Main.java:87:60: '+' should be on a new line. [OperatorWrap]
[ERROR] D:\Facultate\POO\teme\POO\tema2\.\src\Main.java:93:5: Missing a Javadoc comment. [MissingJavadocMethod]
Audit done.
Checkstyle ends with 292 errors.
